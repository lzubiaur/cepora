#!/bin/bash

exec_dir=@BUNDLE_RUNTIME_DESTINATION@
cepora_exec=@BUNDLE_RUNTIME_DESTINATION@/@RUNTIME_NAME@
resources=@BUNDLE_RESOURCE_DIR@

# Cepora process command line arguments
# -l logging level (FATAL:5, ERROR:4...)
cepora_opts="-l 5"

cd @CMAKE_INSTALL_PREFIX@

# Print commands and their arguments as they are executed
if [ "$1" == "-d" ]; then
  set -x
  python_opts="${python_opts} -d"
fi

unset CPR_PATH
export CPR_PATH="${exec_dir};${resources};."

${cepora_exec} -v
# ${cepora_exec} -h

# On windows we can use PY_PYTHON to force a version
export PY_PYTHON=3
python=python

if command -v python3 >/dev/null 2>&1; then
  python=python3
fi

echo "Run tests using `${python} -V`"

function run_test {
  ${python} run-testcase.py ${python_opts} -s $1 ${cepora_exec} ${cepora_opts} $1 $2
}

run_test 'tests/hello.coffee'
run_test 'tests/loadlib.coffee'
run_test 'tests/arguments.coffee' '-arg1 -arg2 optionA'
run_test 'tests/gl3w.coffee'
run_test 'tests/imgui.coffee'

# export CPR_PATH='/tmp'
# run_test 'js/tests/glfw.coffee'
# unset CPR_PATH
# run_test 'js/tests/glfw.coffee'
